// <auto-generated />
using System;
using Core.Catalog.Persistence.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Core.Catalog.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Catalog.Domain.Entities.api_log_catalog_detail", b =>
                {
                    b.Property<int>("api_log_catalog_detail_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("api_log_catalog_detail_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("api_log_catalog_detail_id"));

                    b.Property<int?>("api_log_catalog_header_id")
                        .HasColumnType("int")
                        .HasColumnName("api_log_catalog_header_id");

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("data_message")
                        .HasMaxLength(300)
                        .HasColumnType("text");

                    b.Property<string>("process_component")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("status_code")
                        .HasColumnType("int");

                    b.Property<string>("type_process")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("api_log_catalog_detail_id");

                    b.HasIndex("api_log_catalog_header_id");

                    b.ToTable("api_log_catalog_detail", (string)null);
                });

            modelBuilder.Entity("Core.Catalog.Domain.Entities.api_log_catalog_header", b =>
                {
                    b.Property<int>("api_log_catalog_header_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("api_log_catalog_header_id")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityAlwaysColumn);

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("api_log_catalog_header_id"));

                    b.Property<DateTime?>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("id_tracking")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("request_method")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("request_url")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("response_code")
                        .HasColumnType("int");

                    b.HasKey("api_log_catalog_header_id");

                    b.ToTable("api_log_catalog_header", (string)null);
                });

            modelBuilder.Entity("Core.Catalog.Domain.Entities.catalog_error", b =>
                {
                    b.Property<int>("catalog_error_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("catalog_error_id"));

                    b.Property<DateTime?>("date_create")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("date_update")
                        .HasColumnType("datetime2");

                    b.Property<string>("error_description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("error_priority")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("error_status_code")
                        .HasColumnType("int");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.HasKey("catalog_error_id");

                    b.ToTable("catalog_error", (string)null);
                });

            modelBuilder.Entity("Core.Catalog.Domain.Entities.parametros", b =>
                {
                    b.Property<int>("parametros_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("parametros_id"));

                    b.Property<DateTime?>("date_create")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("date_update")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre_parametro")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int?>("status")
                        .HasColumnType("int");

                    b.Property<string>("valor")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("parametros_id");

                    b.ToTable("parametros", (string)null);
                });

            modelBuilder.Entity("Core.Catalog.Domain.Entities.api_log_catalog_detail", b =>
                {
                    b.HasOne("Core.Catalog.Domain.Entities.api_log_catalog_header", "api_log_catalog_header")
                        .WithMany("api_log_catalog_detail")
                        .HasForeignKey("api_log_catalog_header_id")
                        .HasConstraintName("fk_catalog_header_detail");

                    b.Navigation("api_log_catalog_header");
                });

            modelBuilder.Entity("Core.Catalog.Domain.Entities.api_log_catalog_header", b =>
                {
                    b.Navigation("api_log_catalog_detail");
                });
#pragma warning restore 612, 618
        }
    }
}
